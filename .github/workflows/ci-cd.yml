name: CI Pipeline for React App

on:
  pull_request:
    branches:
      - develop  # Se ejecuta CI cuando hay un PR hacia la rama develop
  push:
    branches:
      - main  # Se realiza el deploy cuando se hace merge en la rama main
env:
  EC2_PUBLIC_IP: ${{ vars.EC2_PUBLIC_IP }}
  EC2_PEM_FILE: ${{ secrets.EC2_PEM_FILE }}

jobs:
  build:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v4
        - name: Use Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20.x'
        - run: npm install
        - run: npm run build --if-present
        - run: npm test

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Add SSH Key
        run: |
          echo "${{ env.EC2_PEM_FILE }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Create temp directory
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo mkdir /home/ec2-user/temp_build/ && sudo chmod 777 /home/ec2-user/temp_build/'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm run build
      - run: cd build && ls
      - name: owner a
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo chown -R ec2-user:ec2-user /home/ec2-user/temp_build/'
          
      - name: Copy Files to EC2 Temporary Directory
        run: |
          scp -o StrictHostKeyChecking=no -i ec2-key.pem -r ./build/* ec2-user@${{ env.EC2_PUBLIC_IP }}:/home/ec2-user/temp_build/

      - name: Move Files to NGINX Directory
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo rm -rf /usr/share/nginx/html/*'
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo mv /home/ec2-user/temp_build/* /usr/share/nginx/html/'

      - name: Restart NGINX
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo systemctl restart nginx'
        
      - name: Remove tmp folder
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} 'sudo rm -rf /home/ec2-user/temp_build/'
